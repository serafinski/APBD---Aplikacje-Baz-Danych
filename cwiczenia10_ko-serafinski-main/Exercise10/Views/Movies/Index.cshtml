@*Mocne typowanie obiektu model jako IEnumerable -> każdy element będzie typowany jako Movie
Dodatkowo kod kompilator będzie walidować typy użyte w kodzie!*@
@*@model IEnumerable<Exercise10.Models.Movie>*@

@*Zmodyfikowany by działać dla wyszukiwania po gatunkach*@
@model Exercise10.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@*Dodanie UI
Używamy form Tag Helper - gdy klikniemy akcja jest przekazywana do akcji Index w kontrolerze
Bez dodatnia method="get" - będziemy dostawać cały czas /Movies a nie np  https://localhost:7042/Movies?SearchString=ghost*@

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        
        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Movies![0].Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Movies![0].Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Movies![0].Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Movies![0].Rating)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    
    @*Loop po filmach - używając mocno typowanego obiektu Model*@
    @foreach (var item in Model.Movies!)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            @*Linki do edytowania filmów w index'ie - tzw. Tag Helpers*@
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>